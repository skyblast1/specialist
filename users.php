<?php
interface IUser {
    function showInfo();
}
abstract class abstractUser implements IUser{
    public $name;
    public $login;
    public $pass;

    abstract function showInfo();
}
 class User extends abstractUser{
    public $name;
    public $login;
    public $pass;
    static $i = 0;

    function __construct($name, $login, $pass){
        $this->name = $name;
        $this->login = $login;
        $this->pass = $pass;
        self::$i++;
    }

     public function showInfo() {
        echo "<hr>";
        echo $this->name . '<br>';
        echo $this->login . '<br>';
        echo $this->pass . '<br>';
    }
    public function showClass () {
        return __CLASS__;
    }
}
class superUser extends User {
     public $gender;
     static $i = 0;
     function __construct($name, $login, $pass, $gender){
         parent::__construct($name, $login, $pass);
         $this->gender = $gender;
         self::$i++;
     }
     public function showInfo(){
         parent::showInfo(); // TODO: Change the autogenerated stub
         echo $this->gender . '<br>';
     }
    public function showClass () {
        return __CLASS__;
    }

}
$obj3 = new User('Jonh','John778','1234','male');
$obj3->showInfo();
echo 'Объектов класса ' . $obj3->showClass() . ' - ' . User::$i;
$obj1 = new superUser('Jonh','John778','1234','male');
 $obj1->showInfo();
 echo 'Объектов класса ' . $obj1->showClass() . ' - ' . superUser::$i;
$obj2 = new superUser('Jonh2','John7782','12342','male');
$obj2->showInfo();
echo 'Объектов класса ' . $obj2->showClass() . ' - ' . superUser::$i;
$obj4 = new User('Jonh','John778','1234','male');
$obj4->showInfo();
echo 'Объектов класса ' . $obj4->showClass() . ' - ' . User::$i;

